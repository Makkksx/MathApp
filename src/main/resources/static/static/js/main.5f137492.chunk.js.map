{"version":3,"sources":["config/FirebaseConfig.js","service/Auth.js","components/NaviBar.js","components/homeBlocks/HomeTagCloud.js","util/APIUtils.js","components/homeBlocks/HomeTasks.js","components/Home.js","components/AdminBlocks/UsersTable.js","components/Admin.js","config/AuthMethods.js","components/Login.js","components/ProfileBlocks/TasksTable.js","components/Profile.js","components/taskCreationBlocks/DropPlace.js","components/taskCreationBlocks/TaskCondition.js","components/taskCreationBlocks/TaskHead.js","components/taskCreationBlocks/TaskAnswer.js","components/TaskCreation.js","components/TaskBlocks/TaskAnswerChecker.js","components/Task.js","common/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","AuthContext","React","createContext","auth","getAuth","firebase","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","onAuthStateChanged","user","Provider","value","NaviBar","history","useHistory","useContext","admin","setAdmin","alert","useAlert","getIdTokenResult","then","idTokenResult","claims","catch","error","show","timeout","type","console","log","Navbar","bg","expand","Container","to","Brand","Toggle","Collapse","id","Nav","className","Link","uid","onClick","signOut","push","HomeTagCloud","tagData","setTagData","a","axios","get","response","data","fetchData","minSize","maxSize","tags","storage","getStorage","getURLData","url","Promise","resolve","reject","getDownloadURL","ref","Error","HomeTasks","tasks","setTasks","task","conditionURL","condition","reverse","map","index","Card","Header","Title","as","title","Subtitle","theme","tag","Badge","Body","Markdown","source","Button","Home","UsersTable","setData","rowEvents","e","row","rowIndex","getIdToken","idToken","headers","style","marginTop","striped","hover","keyField","columns","dataField","text","sort","Admin","googleProvider","GoogleAuthProvider","facebookProvider","FacebookAuthProvider","githubProvider","GithubAuthProvider","Login","handleOnClick","provider","signInWithPopup","post","TasksTable","params","length","Profile","profileData","setProfileData","useParams","username","ListGroup","variant","Item","createdTasks","solvedTasks","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","DropPlace","getImages","useDropzone","maxFiles","validator","file","includes","code","message","acceptedFiles","fileRejections","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","accFiles","path","size","rejFiles","errors","useMemo","TaskCondition","getCondition","setCondition","onChange","TaskHead","getTitle","getTheme","getTags","setTitle","setTheme","multiSelections","setMultiSelections","tagOptions","setTagOptions","themeOptions","setThemeOptions","Select","options","Form","required","option","Stack","gap","Group","Label","Control","placeholder","event","target","Feedback","clearButton","allowNew","labelKey","multiple","selected","TaskAnswer","getAnswer","answer","answers","setAnswers","handleAddFields","values","handleRemoveFields","splice","handleInputChange","Row","Col","md","ButtonGroup","TaskCreation","date","Date","getTime","setTags","images","setImages","setAnswer","validated","setValidated","useCallback","uploadFiles","uploadRef","name","uploadTask","uploadBytesResumable","taskError","on","snapshot","uploadData","imagesUrls","conditionUrl","tagsDto","answersDto","image","File","forEach","elm","substring","taskDto","handleSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","noValidate","onSubmit","TaskAnswerChecker","taskId","solved","getSolved","sendAnswer","Task","taskData","setTaskData","setSolved","ListGroupItem","Image","src","rounded","width","PrivateRoute","RouteComponent","component","rest","render","routeProps","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","template","AlertTemplate","document","getElementById"],"mappings":"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","file":"static/js/main.5f137492.chunk.js","sourcesContent":["import {initializeApp} from \"firebase/app\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAZCTYk0aTKjj0d8ihntd_GuzdodUT4RVQ\",\r\n    authDomain: \"poised-cathode-325720.firebaseapp.com\",\r\n    projectId: \"poised-cathode-325720\",\r\n    storageBucket: \"poised-cathode-325720.appspot.com\",\r\n    messagingSenderId: \"286350985232\",\r\n    appId: \"1:286350985232:web:bbd8c1efc44e336bd06295\",\r\n    measurementId: \"G-LHMQMJVMPJ\"\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nexport default firebaseApp;","import React, {useEffect, useState} from \"react\";\r\nimport {getAuth} from \"firebase/auth\";\r\nimport firebase from \"../config/FirebaseConfig\";\r\n\r\nexport const AuthContext = React.createContext();\r\nconst auth = getAuth(firebase);\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [pending, setPending] = useState(true);\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged((user) => {\r\n            setCurrentUser(user)\r\n            setPending(false)\r\n        });\r\n    }, []);\r\n\r\n    if (pending) {\r\n        return <>Loading...</>\r\n    }\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{currentUser}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};","import React, {useContext, useEffect, useState} from 'react';\r\nimport {Container, Nav, Navbar} from \"react-bootstrap\";\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {getAuth} from \"firebase/auth\";\r\nimport {AuthContext} from \"../service/Auth\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function NaviBar() {\r\n    let history = useHistory();\r\n    const {currentUser} = useContext(AuthContext);\r\n    const [admin, setAdmin] = useState(false);\r\n    const alert = useAlert()\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            currentUser.getIdTokenResult()\r\n                .then((idTokenResult) => {\r\n                    if (!!idTokenResult.claims.admin && !admin) {\r\n                        setAdmin(true)\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    alert.show(\"Bad token\", {timeout: 2000, type: 'error'})\r\n                    console.log(error);\r\n                })\r\n        } else {\r\n            setAdmin(false)\r\n        }\r\n    }, [currentUser, admin, alert]);\r\n\r\n    const handleLogout = () => {\r\n        getAuth().signOut().then(() => history.push('/home'));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Container>\r\n                    <LinkContainer to=\"/\">\r\n                        <Navbar.Brand>MathApp</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"me-auto\">\r\n                            <LinkContainer to=\"/home\">\r\n                                <Nav.Link>Home</Nav.Link>\r\n                            </LinkContainer>\r\n                            {admin ? (<LinkContainer to=\"/admin\">\r\n                                <Nav.Link>Admin</Nav.Link>\r\n                            </LinkContainer>) : (<div/>)\r\n                            }\r\n                            {currentUser ? (<LinkContainer to=\"/createTask\">\r\n                                <Nav.Link>Create task</Nav.Link>\r\n                            </LinkContainer>) : (<div/>)}\r\n                        </Nav>\r\n                        <Nav>\r\n                            {currentUser ? (\r\n                                <>\r\n                                    <LinkContainer to={\"/profile/\" + currentUser.uid}>\r\n                                        <button className=\"btn btn-primary\" type=\"submit\">Profile</button>\r\n                                    </LinkContainer>\r\n                                    <button className=\"btn btn-primary mx-2\" onClick={() => handleLogout()}\r\n                                            type=\"submit\">Sign-out\r\n                                    </button>\r\n                                </>\r\n                            ) : (<LinkContainer to=\"/login\">\r\n                                <button className=\"btn btn-primary mx-2\" type=\"submit\">Sign-up</button>\r\n                            </LinkContainer>)}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    )\r\n\r\n}","import {TagCloud} from \"react-tagcloud\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useAlert} from \"react-alert\";\r\n\r\nexport default function HomeTagCloud() {\r\n    const [tagData, setTagData] = useState([]);\r\n    const alert = useAlert()\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(\"/task/getAllTags\")\r\n                .then(response => {\r\n                    setTagData(response.data)\r\n                }).catch((error) => {\r\n                    alert.show(\"No access!\", {timeout: 2000, type: 'error'})\r\n                    console.log(error);\r\n                });\r\n        }\r\n\r\n        fetchData().catch((error) => {\r\n            console.log(error)\r\n        })\r\n\r\n    }, [alert]);\r\n    return (\r\n        <TagCloud\r\n            minSize={12}\r\n            maxSize={35}\r\n            tags={tagData}\r\n            // onClick={tag => alert(`'${tag.value}' was selected!`)}\r\n        />\r\n    )\r\n}","import {getDownloadURL, getStorage, ref} from \"firebase/storage\";\r\nimport axios from \"axios\";\r\n\r\nconst storage = getStorage();\r\n\r\nexport const getURLData = (url) =>\r\n    new Promise((resolve, reject) => {\r\n        getDownloadURL(ref(storage, url))\r\n            .then(async (url) => {\r\n                await axios.get(url)\r\n                    .then(response => {\r\n                        resolve(response.data);\r\n                    }).catch((error) => {\r\n                        reject(new Error(\"No access!\"))\r\n                        console.log(error);\r\n                    });\r\n            })\r\n    });\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {Badge, Button, Card, Container} from \"react-bootstrap\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport {getURLData} from \"../../util/APIUtils\";\r\nimport MDEditor from '@uiw/react-md-editor';\r\nimport {AuthContext} from \"../../service/Auth\";\r\n\r\nexport default function HomeTasks() {\r\n    const [tasks, setTasks] = useState([]);\r\n    const alert = useAlert();\r\n    const [pending, setPending] = useState(true);\r\n    const {currentUser} = useContext(AuthContext);\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(\"/task/getAllTasks\")\r\n                .then(async response => {\r\n                    for (const task of response.data) {\r\n                        await getURLData(task.conditionURL).then((condition) => {\r\n                            task.condition = condition;\r\n                        })\r\n                    }\r\n                    setTasks(response.data)\r\n                    setTasks(response.data.reverse())\r\n                    setPending(false)\r\n                }).catch((error) => {\r\n                    alert.show(\"No access!\", {timeout: 2000, type: 'error'})\r\n                    console.log(error);\r\n                });\r\n        }\r\n\r\n        fetchData().catch((error) => {\r\n            console.log(error)\r\n        })\r\n\r\n    }, [alert]);\r\n    if (pending) {\r\n        return <>Loading...</>\r\n    }\r\n    return (\r\n        tasks.map((task, index) => (\r\n            <Container className={\"mt-2\"} key={index}>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Card.Title as={\"h2\"}>\r\n                            {task.title}\r\n                        </Card.Title>\r\n                        <Card.Subtitle className=\"text-muted\">\r\n                            {task.theme}\r\n                        </Card.Subtitle>\r\n                        {\r\n                            task.tags.map((tag, index) => (\r\n                                <Badge key={index} bg=\"primary\" className=\"mx-1\">{tag}</Badge>\r\n                            ))\r\n                        }\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <MDEditor.Markdown source={task.condition}/>\r\n                        {currentUser ? (<LinkContainer to={\"/task/\" + task.id}>\r\n                            <Button className=\"mt-2\">Go to task</Button>\r\n                        </LinkContainer>) : <div/>}\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        ))\r\n    );\r\n}","import React from \"react\";\r\nimport HomeTagCloud from \"./homeBlocks/HomeTagCloud\";\r\nimport HomeTasks from \"./homeBlocks/HomeTasks\";\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <div className=\"container mt-3 text-center\">\r\n            <HomeTagCloud/>\r\n            <HomeTasks/>\r\n        </div>\r\n    )\r\n}","import React, {useContext, useEffect, useState} from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport axios from \"axios\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {AuthContext} from \"../../service/Auth\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function UsersTable() {\r\n    const {currentUser} = useContext(AuthContext);\r\n    const [data, setData] = useState([]);\r\n    const alert = useAlert()\r\n    let history = useHistory();\r\n    const columns = [\r\n        {\r\n            dataField: \"uid\",\r\n            text: \"ID\",\r\n            sort: true\r\n        },\r\n        {\r\n            dataField: \"username\",\r\n            text: \"Name\",\r\n            sort: true\r\n        },\r\n        {\r\n            dataField: \"email\",\r\n            text: \"Email\",\r\n            sort: true\r\n        },\r\n        {\r\n            dataField: \"provider\",\r\n            text: \"Provider\",\r\n            sort: true\r\n        },\r\n    ];\r\n    const rowEvents = {\r\n        onClick: (e, row, rowIndex) => {\r\n            history.push('/profile/' + row.uid)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            currentUser.getIdToken(true).then(async (idToken) => {\r\n                await axios.get(\"/admin/getAll\", {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        idToken: idToken,\r\n                    },\r\n                })\r\n                    .then(response => {\r\n                        setData(response.data);\r\n                    }).catch((error) => {\r\n                        alert.show(\"You are not an admin!\", {timeout: 2000, type: 'error'})\r\n                        console.log(error);\r\n                    });\r\n            }).catch((error) => {\r\n                alert.show(\"No access!\", {timeout: 2000, type: 'error'})\r\n                console.log(error)\r\n            });\r\n        } else {\r\n            alert.show(\"Please login to view\", {timeout: 2000, type: 'error'})\r\n        }\r\n    }, [alert, currentUser]);\r\n\r\n    return (\r\n        <div className=\"container\" style={{marginTop: 50}}>\r\n            <BootstrapTable\r\n                striped\r\n                hover\r\n                keyField='id'\r\n                data={data}\r\n                columns={columns}\r\n                rowEvents={rowEvents}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport UsersTable from \"./AdminBlocks/UsersTable\";\r\nimport {Container} from \"react-bootstrap\";\r\n\r\nexport const Admin = () => (\r\n    <Container>\r\n        <UsersTable/>\r\n    </Container>\r\n)","import {FacebookAuthProvider, GithubAuthProvider, GoogleAuthProvider} from \"firebase/auth\";\r\n\r\nexport const googleProvider = new GoogleAuthProvider();\r\nexport const facebookProvider = new FacebookAuthProvider();\r\nexport const githubProvider = new GithubAuthProvider();","import React, {useContext} from \"react\";\r\nimport {facebookProvider, githubProvider, googleProvider} from \"../config/AuthMethods\";\r\nimport {AuthContext} from \"../service/Auth\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {getAuth, signInWithPopup} from \"firebase/auth\";\r\nimport firebase from \"../config/FirebaseConfig\";\r\nimport {useAlert} from \"react-alert\";\r\n\r\nconst auth = getAuth(firebase);\r\nexport const Login = () => {\r\n    const alert = useAlert()\r\n    const {currentUser} = useContext(AuthContext);\r\n    const handleOnClick = async (provider) => {\r\n        await signInWithPopup(auth, provider);\r\n        await auth.currentUser.getIdToken(true).then((idToken) => {\r\n            axios.post(\"/auth/login\", {}, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    idToken: idToken,\r\n                },\r\n            }).catch((error) => {\r\n                alert.show(\"No access!\", {timeout: 2000, type: 'error'})\r\n                console.log(error)\r\n            });\r\n        }).catch((error) => {\r\n            alert.show(\"Bad token\", {timeout: 2000, type: 'error'})\r\n            console.log(error)\r\n        });\r\n    };\r\n\r\n    if (currentUser) {\r\n        return <Redirect to=\"/\"/>;\r\n    }\r\n    return (\r\n        <div className=\"container mt-3 mb-2 text-center\">\r\n            <div className=\"container mt-2 mb-2\">\r\n                <div className=\"btn btn-lg btn-secondary fab fa-google col-3\"\r\n                     onClick={() => handleOnClick(googleProvider)}>Continue with Google\r\n                </div>\r\n            </div>\r\n            <div className=\"container mt-2 mb-2\">\r\n                <div className=\"btn btn-lg btn-secondary fab fa-facebook col-3\"\r\n                     onClick={() => handleOnClick(facebookProvider)}>Continue with Facebook\r\n                </div>\r\n            </div>\r\n            <div className=\"container mt-2 mb-2\">\r\n                <div className=\"btn btn-lg btn-secondary fab fa-github col-3\"\r\n                     onClick={() => handleOnClick(githubProvider)}>Continue with GitHub\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport axios from \"axios\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {AuthContext} from \"../../service/Auth\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function TasksTable(uid) {\r\n    let history = useHistory();\r\n    const {currentUser} = useContext(AuthContext);\r\n    const [data, setData] = useState([]);\r\n    const alert = useAlert()\r\n    const columns = [\r\n        {\r\n            dataField: \"id\",\r\n            text: \"Task id\",\r\n            sort: true\r\n        },\r\n        {\r\n            dataField: \"title\",\r\n            text: \"Title\",\r\n            sort: true\r\n        },\r\n        {\r\n            dataField: \"theme\",\r\n            text: \"Theme\",\r\n            sort: true\r\n        }\r\n    ];\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await currentUser.getIdToken(true).then(async (idToken) => {\r\n                await axios.get(\"/task/getUserTasks\", {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        idToken: idToken,\r\n                    },\r\n                    params: {\r\n                        uid: uid.uid\r\n                    },\r\n                })\r\n                    .then(response => {\r\n                        setData(response.data);\r\n                    }).catch((error) => {\r\n                        alert.show(\"No access!\", {timeout: 2000, type: 'error'})\r\n                        console.log(error);\r\n                    });\r\n            }).catch((error) => {\r\n                alert.show(\"Bad token\", {timeout: 2000, type: 'error'})\r\n                console.log(error)\r\n            });\r\n        }\r\n\r\n        fetchData().catch((error) => {\r\n            console.log(error)\r\n        })\r\n\r\n    }, [uid, alert, currentUser]);\r\n    const rowEvents = {\r\n        onClick: (e, row, rowIndex) => {\r\n            history.push('/task/' + row.id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!!data.length ?\r\n                (<div className=\"container\" style={{marginTop: 50}}>\r\n                    <BootstrapTable\r\n                        striped\r\n                        hover\r\n                        keyField='id'\r\n                        data={data}\r\n                        columns={columns}\r\n                        rowEvents={rowEvents}/>\r\n                </div>)\r\n                : <div/>}\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {AuthContext} from \"../service/Auth\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {Card, Container, ListGroup} from \"react-bootstrap\";\r\nimport TasksTable from \"./ProfileBlocks/TasksTable\";\r\n\r\nexport default function Profile() {\r\n    const {currentUser} = useContext(AuthContext);\r\n    const [profileData, setProfileData] = useState([]);\r\n    const {uid} = useParams()\r\n    const alert = useAlert()\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await currentUser.getIdToken(true).then(async (idToken) => {\r\n                await axios.get(\"/admin/getProfile\", {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        idToken: idToken,\r\n                    },\r\n                    params: {\r\n                        uid: uid\r\n                    },\r\n                })\r\n                    .then(response => {\r\n                        setProfileData(response.data)\r\n                    }).catch((error) => {\r\n                        alert.show(\"No access!\", {timeout: 2000, type: 'error'})\r\n                        console.log(error);\r\n                    });\r\n            }).catch((error) => {\r\n                alert.show(\"Bad token\", {timeout: 2000, type: 'error'})\r\n                console.log(error)\r\n            });\r\n        }\r\n\r\n        fetchData().catch((error) => {\r\n            console.log(error)\r\n        })\r\n\r\n    }, [uid, currentUser, alert]);\r\n    if (!profileData) {\r\n        return <p>User not found</p>;\r\n    }\r\n    return (\r\n        <Container className={\"mt-2\"}>\r\n            <Card>\r\n                <Card.Header>\r\n                    <Card.Title as={\"h2\"}>\r\n                        {profileData.username}\r\n                    </Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item as={\"h5\"}>Number of tasks created: {profileData.createdTasks}</ListGroup.Item>\r\n                        <ListGroup.Item as={\"h5\"}>Number of solved tasks: {profileData.solvedTasks}</ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card.Body>\r\n            </Card>\r\n            {profileData.uid ? (<TasksTable uid={profileData.uid}/>) : <>Loading...</>}\r\n        </Container>\r\n    );\r\n}","import {useDropzone} from \"react-dropzone\";\r\nimport {useEffect, useMemo} from \"react\";\r\n\r\nconst baseStyle = {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    borderWidth: 2,\r\n    borderRadius: 2,\r\n    borderColor: '#eeeeee',\r\n    borderStyle: 'dashed',\r\n    backgroundColor: '#fafafa',\r\n    color: '#bdbdbd',\r\n    outline: 'none',\r\n    transition: 'border .24s ease-in-out'\r\n};\r\n\r\nconst activeStyle = {\r\n    borderColor: '#2196f3'\r\n};\r\n\r\nconst acceptStyle = {\r\n    borderColor: '#00e676'\r\n};\r\n\r\nconst rejectStyle = {\r\n    borderColor: '#ff1744'\r\n};\r\nexport default function DropPlace({getImages}) {\r\n\r\n    function typeValidator(file) {\r\n        const validImageTypes = ['image/bmp', 'image/jpeg', 'image/jpg', 'image/png'];\r\n        if (!validImageTypes.includes(file['type'])) {\r\n            return {\r\n                code: \"wrong-type\",\r\n                message: `Images only`\r\n            };\r\n        }\r\n        return null\r\n    }\r\n\r\n    const {\r\n        acceptedFiles, fileRejections, getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject\r\n    } = useDropzone({\r\n        maxFiles: 2,\r\n        validator: typeValidator\r\n    });\r\n    const accFiles = acceptedFiles.map(file => (\r\n        <li key={file.path}>\r\n            {file.path} - {file.size} bytes\r\n        </li>\r\n    ));\r\n    const rejFiles = fileRejections.map(({file, errors}) => {\r\n        return (\r\n            <li key={file.path}>\r\n                {file.path} - {file.size} bytes\r\n                <ul>\r\n                    {errors.map(e => <li key={e.code}>{e.message}</li>)}\r\n                </ul>\r\n\r\n            </li>\r\n        )\r\n    });\r\n    const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isDragActive ? activeStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n    }), [\r\n        isDragActive,\r\n        isDragReject,\r\n        isDragAccept\r\n    ]);\r\n\r\n\r\n    useEffect(() => {\r\n        getImages(acceptedFiles)\r\n    }, [getImages, acceptedFiles])\r\n\r\n    return (\r\n        <section className=\"container mt-2\">\r\n            <h4>Add images</h4>\r\n            <div {...getRootProps({style})}>\r\n                <input {...getInputProps()} />\r\n                <p>Drag 'n' drop some files here, or click to select files</p>\r\n                <em>(3 files are the maximum number of files you can drop here)</em>\r\n            </div>\r\n            <aside className=\"mt-2\">\r\n                <h5>Accepted files</h5>\r\n                <ul>{accFiles}</ul>\r\n                <h5>Rejected files</h5>\r\n                <ul>{rejFiles}</ul>\r\n            </aside>\r\n        </section>\r\n    );\r\n}\r\n\r\n","import {useEffect, useState} from \"react\";\r\nimport MDEditor from '@uiw/react-md-editor';\r\n\r\nexport default function TaskCondition({getCondition}) {\r\n    const [condition, setCondition] = useState(\"**Condition here**\");\r\n    useEffect(() => {\r\n        getCondition(condition)\r\n    }, [getCondition, condition])\r\n    return (\r\n        <div className=\"container mt-3\">\r\n            <h4>Set condition</h4>\r\n            <MDEditor\r\n                value={condition}\r\n                onChange={setCondition}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Form, Stack} from \"react-bootstrap\";\r\nimport {Typeahead} from 'react-bootstrap-typeahead';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport \"./TaskHead.css\"\r\nimport axios from \"axios\";\r\nimport {getAuth} from \"firebase/auth\";\r\nimport firebase from \"../../config/FirebaseConfig\";\r\nimport {useAlert} from \"react-alert\";\r\n\r\nconst auth = getAuth(firebase);\r\n\r\nexport default function TaskHead({getTitle, getTheme, getTags}) {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [theme, setTheme] = useState(\"\");\r\n    const [multiSelections, setMultiSelections] = useState([]);\r\n    const [tagOptions, setTagOptions] = useState([])\r\n    const [themeOptions, setThemeOptions] = useState([])\r\n    const alert = useAlert()\r\n    useEffect(() => {\r\n        getTitle(title)\r\n    }, [getTitle, title])\r\n    useEffect(() => {\r\n        getTheme(theme)\r\n    }, [theme, getTheme])\r\n    useEffect(() => {\r\n        getTags(multiSelections)\r\n    }, [getTags, multiSelections])\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await auth.currentUser.getIdToken(true).then(async (idToken) => {\r\n                await axios.get(\"/task/getAllTagNames\", {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        idToken: idToken,\r\n                    }\r\n                })\r\n                    .then(response => {\r\n                        setTagOptions(response.data)\r\n                    }).catch((error) => {\r\n                        alert.show(\"No access!\", {timeout: 2000, type: 'error'})\r\n                        console.log(error);\r\n                    });\r\n                await axios.get(\"/task/getAllThemes\", {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        idToken: idToken,\r\n                    }\r\n                })\r\n                    .then(response => {\r\n                        setThemeOptions(response.data)\r\n                        setTheme(response.data[0])\r\n                    }).catch((error) => {\r\n                        alert.show(\"No access!\", {timeout: 2000, type: 'error'})\r\n                        console.log(error);\r\n                    });\r\n            }).catch((error) => {\r\n                alert.show(\"Bad token\", {timeout: 2000, type: 'error'})\r\n                console.log(error)\r\n            });\r\n        }\r\n\r\n        fetchData().catch((error) => {\r\n            console.log(error)\r\n        })\r\n\r\n    }, [alert]);\r\n    const Select = ({value, options, onChange}) => {\r\n        return (\r\n            <Form.Select required value={value} onChange={onChange}>\r\n                {options.map(option => {\r\n                    return (<option key={option} value={option}>{option}</option>);\r\n                })}\r\n            </Form.Select>\r\n        );\r\n    };\r\n    return (\r\n        <Stack gap={3} className=\"container mt-2 mx-auto\">\r\n            <Form.Group>\r\n                <Form.Label as={\"h4\"}>Choose title</Form.Label>\r\n                <Form.Control required\r\n                              type=\"text\"\r\n                              placeholder=\"Choose a title...\"\r\n                              value={title}\r\n                              onChange={event => {\r\n                                  setTitle(event.target.value)\r\n                              }}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                    Please choose a title.\r\n                </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label as={\"h4\"}>Chose theme</Form.Label>\r\n                <Select value={theme} options={themeOptions} onChange={event => {\r\n                    setTheme(event.target.value)\r\n                }}/>\r\n                <Form.Control.Feedback type=\"invalid\">Please choose a theme.</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label as={\"h4\"}>Choose tags</Form.Label>\r\n                <Typeahead\r\n                    clearButton\r\n                    allowNew\r\n                    id=\"tags\"\r\n                    labelKey=\"name\"\r\n                    multiple\r\n                    onChange={setMultiSelections}\r\n                    options={tagOptions}\r\n                    placeholder=\"Choose tags...\"\r\n                    selected={multiSelections}\r\n                />\r\n            </Form.Group>\r\n        </Stack>\r\n    );\r\n}","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport {Button, ButtonGroup, Col, Form, Row} from \"react-bootstrap\";\r\n\r\nexport default function TaskAnswer({getAnswer}) {\r\n    const [answers, setAnswers] = useState([\r\n        {answer: ''}\r\n    ]);\r\n    useEffect(() => {\r\n        getAnswer(answers)\r\n    }, [getAnswer, answers])\r\n    const handleAddFields = () => {\r\n        const values = [...answers];\r\n        if (values.length < 3) {\r\n            values.push({answer: ''});\r\n            setAnswers(values);\r\n        }\r\n    };\r\n    const handleRemoveFields = index => {\r\n        const values = [...answers];\r\n        if (values.length > 1) {\r\n            values.splice(index, 1);\r\n            setAnswers(values);\r\n        }\r\n    };\r\n    const handleInputChange = (index, event) => {\r\n        const values = [...answers];\r\n        values[index].answer = event.target.value;\r\n        setAnswers(values);\r\n    };\r\n    return (\r\n        <Form.Group className=\"container mt-2\">\r\n            <Form.Label><h4>Set answers</h4></Form.Label>\r\n            {answers.map((answers, index) => (\r\n                <Fragment key={`${answers}~${index}`}>\r\n                    <Row className=\"mt-2\">\r\n                        <Col md={10}>\r\n                            <Form.Control\r\n                                required\r\n                                type=\"text\"\r\n                                placeholder=\"Answer\"\r\n                                value={answers.answer}\r\n                                onChange={event => handleInputChange(index, event)}\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please set a answer.\r\n                            </Form.Control.Feedback>\r\n                        </Col>\r\n                        <Col md={2}>\r\n                            <ButtonGroup>\r\n                                <Button\r\n                                    variant=\"secondary\"\r\n                                    onClick={() => handleRemoveFields(index)}>\r\n                                    -\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"secondary\"\r\n                                    onClick={() => handleAddFields()}>\r\n                                    +\r\n                                </Button>\r\n                            </ButtonGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </Fragment>\r\n            ))}\r\n        </Form.Group>\r\n    )\r\n}\r\n","import React, {useCallback, useContext, useState} from \"react\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport DropPlace from \"./taskCreationBlocks/DropPlace\";\r\nimport TaskCondition from \"./taskCreationBlocks/TaskCondition\";\r\nimport {AuthContext} from \"../service/Auth\";\r\nimport {useAlert} from \"react-alert\";\r\nimport TaskHead from \"./taskCreationBlocks/TaskHead\";\r\nimport TaskAnswer from \"./taskCreationBlocks/TaskAnswer\";\r\nimport {getDownloadURL, getStorage, ref, uploadBytesResumable} from \"firebase/storage\";\r\nimport axios from \"axios\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst storage = getStorage();\r\nexport const TaskCreation = () => {\r\n    let history = useHistory();\r\n    const date = new Date().getTime();\r\n    const {currentUser} = useContext(AuthContext);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [theme, setTheme] = useState(\"\");\r\n    const [tags, setTags] = useState(null)\r\n    const [condition, setCondition] = useState(null)\r\n    const [images, setImages] = useState(null)\r\n    const [answer, setAnswer] = useState([]);\r\n    const [validated, setValidated] = useState(false);\r\n    const alert = useAlert()\r\n    const getTitle = useCallback((title) => {\r\n        setTitle(title)\r\n    }, []);\r\n    const getTheme = useCallback((theme) => {\r\n        setTheme(theme)\r\n    }, []);\r\n    const getTags = useCallback((tags) => {\r\n        setTags(tags)\r\n    }, []);\r\n    const getCondition = useCallback((condition) => {\r\n        setCondition(condition)\r\n    }, []);\r\n    const getAnswer = useCallback((answer) => {\r\n        setAnswer(answer)\r\n    }, []);\r\n    const getImages = useCallback((images) => {\r\n        setImages(images)\r\n    }, []);\r\n    const uploadFiles = (type, file) =>\r\n        new Promise((resolve, reject) => {\r\n            const uploadRef = ref(storage, `/${currentUser.uid}/${type}/${file.name}`);\r\n            const uploadTask = uploadBytesResumable(uploadRef, file);\r\n            const taskProgress = () => {\r\n            };\r\n            const taskError = reject;\r\n            const taskCompleted = () => {\r\n                getDownloadURL(uploadTask.snapshot.ref)\r\n                    .then(resolve)\r\n                    .catch(reject);\r\n            };\r\n            uploadTask.on(\"state_changed\", taskProgress, taskError, taskCompleted);\r\n        });\r\n\r\n    async function uploadData() {\r\n        const imagesUrls = [];\r\n        let conditionUrl = null;\r\n        const tagsDto = [];\r\n        const answersDto = [];\r\n        for (const image of images) {\r\n            await uploadFiles(\"Images\", image).then((url) => {\r\n                imagesUrls.push(url)\r\n            })\r\n        }\r\n        const file = new File([condition], `${date}.md`, {\r\n            type: \"text/markdown\",\r\n        });\r\n        await uploadFiles(\"Conditions\", file).then((url) => {\r\n            conditionUrl = url;\r\n        });\r\n        tags.forEach(elm => {\r\n            if (elm.substring) {\r\n                tagsDto.push(elm)\r\n            } else {\r\n                tagsDto.push(elm.name)\r\n            }\r\n        })\r\n        answer.forEach(elm => {\r\n            answersDto.push(elm.answer)\r\n        })\r\n        const taskDto = {\r\n            title: title,\r\n            theme: theme,\r\n            tags: tagsDto,\r\n            conditionURL: conditionUrl,\r\n            images: imagesUrls,\r\n            answers: answersDto\r\n        };\r\n        console.log(taskDto);\r\n        await currentUser.getIdToken(true).then((idToken) => {\r\n            axios.post(\"/task/create\", taskDto, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    idToken: idToken,\r\n                },\r\n            }).then(() => {\r\n                history.push('/home')\r\n                alert.show(\"Successfully created!\", {timeout: 2000, type: 'success'})\r\n            }).catch((error) => {\r\n                alert.show(\"No access!\", {timeout: 2000, type: 'error'})\r\n                console.log(error)\r\n            });\r\n        }).catch((error) => {\r\n            alert.show(\"Bad token\", {timeout: 2000, type: 'error'})\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        const form = event.currentTarget;\r\n        event.preventDefault();\r\n        if (form.checkValidity() === false) {\r\n            setValidated(true);\r\n            event.stopPropagation();\r\n        } else {\r\n            console.log(\"go\")\r\n            await uploadData();\r\n        }\r\n    }\r\n    return (\r\n        <Form className=\"col-md-6 mt-2 mx-auto\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <h2 className={\"text-center\"}>Create new task</h2>\r\n            <TaskHead getTitle={getTitle}\r\n                      getTheme={getTheme}\r\n                      getTags={getTags}/>\r\n            <TaskCondition getCondition={getCondition}/>\r\n            <TaskAnswer getAnswer={getAnswer}/>\r\n            <DropPlace getImages={getImages}/>\r\n            <div className=\"d-grid gap-2\">\r\n                <Button variant=\"primary\" size=\"lg\" type=\"submit\">Create</Button>\r\n            </div>\r\n        </Form>\r\n    )\r\n}","import {Button, Form} from \"react-bootstrap\";\r\nimport React, {useContext, useState} from \"react\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {AuthContext} from \"../../service/Auth\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default function TaskAnswerChecker({taskId, answers, solved, getSolved}) {\r\n    const {currentUser} = useContext(AuthContext);\r\n    const [answer, setAnswer] = useState(\"\");\r\n\r\n    const alert = useAlert()\r\n\r\n    const sendAnswer = async () => {\r\n        await currentUser.getIdToken(true).then(async (idToken) => {\r\n            await axios.post(\"/task/currentAnswer\", taskId, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    idToken: idToken,\r\n                }\r\n            })\r\n                .catch((error) => {\r\n                    alert.show(\"No access!\", {timeout: 2000, type: 'error'})\r\n                    console.log(error);\r\n                });\r\n        }).catch((error) => {\r\n            alert.show(\"Bad token\", {timeout: 2000, type: 'error'})\r\n            console.log(error)\r\n        });\r\n    }\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (solved) {\r\n            alert.show(\"The task has already been solved!\", {timeout: 2000, type: 'info'})\r\n        } else {\r\n            if (answers.includes(answer)) {\r\n                alert.show(\"Correct answer!\", {timeout: 2000, type: 'success'})\r\n                await sendAnswer();\r\n                getSolved(true);\r\n            } else {\r\n                alert.show(\"Wrong answer!\", {timeout: 2000, type: 'error'})\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <Form className=\"col-md-5 mx-auto\" onSubmit={handleSubmit}>\r\n            <Form.Group>\r\n                <Form.Label as={\"h4\"}>Your answer:</Form.Label>\r\n                <Form.Control className=\"mt-3\"\r\n                              required\r\n                              type=\"text\"\r\n                              placeholder=\"Enter your answer...\"\r\n                              value={answer}\r\n                              onChange={event => {\r\n                                  setAnswer(event.target.value)\r\n                              }}\r\n                />\r\n            </Form.Group>\r\n            <Button className=\"mt-3 mb-3\" variant=\"primary\" size=\"lg\" type=\"submit\">Check</Button>\r\n        </Form>\r\n    )\r\n}","import React, {useCallback, useContext, useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {getURLData} from \"../util/APIUtils\";\r\nimport MDEditor from \"@uiw/react-md-editor\";\r\nimport {Badge, Card, Col, Container, Image, ListGroup, ListGroupItem, Row} from \"react-bootstrap\";\r\nimport {AuthContext} from \"../service/Auth\";\r\nimport TaskAnswerChecker from \"./TaskBlocks/TaskAnswerChecker\";\r\n\r\nexport default function Task() {\r\n    const {currentUser} = useContext(AuthContext);\r\n    const [taskData, setTaskData] = useState([]);\r\n    const [condition, setCondition] = useState(\"\");\r\n    const [images, setImages] = useState([]);\r\n    const [tags, setTags] = useState([]);\r\n    const {taskId} = useParams();\r\n    const alert = useAlert()\r\n    const [solved, setSolved] = useState(false);\r\n    const getSolved = useCallback((solved) => {\r\n        setSolved(solved)\r\n    }, []);\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await currentUser.getIdToken(true).then(async (idToken) => {\r\n                await axios.get(\"/task/getTask\", {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        idToken: idToken,\r\n                    },\r\n                    params: {\r\n                        taskId: taskId\r\n                    },\r\n                })\r\n                    .then(async response => {\r\n                        await getURLData(response.data.conditionURL).then((condition) => {\r\n                            setCondition(condition);\r\n                        });\r\n                        setTaskData(response.data)\r\n                        setTags(response.data.tags)\r\n                        setImages(response.data.images)\r\n                    }).catch((error) => {\r\n                        alert.show(\"No access!\", {timeout: 2000, type: 'error'})\r\n                        console.log(error);\r\n                    });\r\n                await axios.get(\"/task/checkSolvedTask\", {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        idToken: idToken,\r\n                    },\r\n                    params: {\r\n                        taskId: taskId\r\n                    },\r\n                })\r\n                    .then((response) => {\r\n                        setSolved(response.data)\r\n                    })\r\n                    .catch((error) => {\r\n                        alert.show(\"No access!\", {timeout: 2000, type: 'error'})\r\n                        console.log(error);\r\n                    });\r\n\r\n            }).catch((error) => {\r\n                alert.show(\"Bad token\", {timeout: 2000, type: 'error'})\r\n                console.log(error)\r\n            });\r\n        }\r\n\r\n        fetchData().catch((error) => {\r\n            console.log(error)\r\n        })\r\n\r\n    }, [alert, currentUser, taskId]);\r\n\r\n    return (\r\n        <Container className=\" mt-2 mx-auto text-center\">\r\n            <Card>\r\n                <Card.Header>\r\n                    <Card.Title as={\"h2\"}>\r\n                        {taskData.title}\r\n                    </Card.Title>\r\n                    <Card.Subtitle className=\"text-muted\">\r\n                        {taskData.theme}\r\n                    </Card.Subtitle>\r\n                    {\r\n                        tags.map((tag, index) => (\r\n                            <Badge key={index} bg=\"primary\" className=\"mx-1\">{tag}</Badge>\r\n                        ))\r\n                    }\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                        <ListGroupItem><MDEditor.Markdown source={condition}/></ListGroupItem>\r\n                        <ListGroupItem>\r\n                            <Row>\r\n                                {images.map((image, index) => (\r\n                                    <Col key={index}>\r\n                                        <Image src={image} rounded width={\"30%\"}/>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        </ListGroupItem>\r\n                    </ListGroup>\r\n                </Card.Body>\r\n                <TaskAnswerChecker taskId={taskData.id} answers={taskData.answers} solved={solved}\r\n                                   getSolved={getSolved}/>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport {AuthContext} from \"../service/Auth\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n    const {currentUser} = useContext(AuthContext);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={routeProps =>\r\n                !!currentUser ? (\r\n                    <RouteComponent {...routeProps} />\r\n                ) : (\r\n                    <Redirect to={\"/login\"} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\nexport default PrivateRoute","import React from 'react';\nimport NaviBar from \"./components/NaviBar\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport {Home} from \"./components/Home\";\nimport {Admin} from \"./components/Admin\";\nimport {Login} from \"./components/Login\";\nimport {AuthProvider} from \"./service/Auth\";\nimport Profile from \"./components/Profile\";\nimport {TaskCreation} from \"./components/TaskCreation\";\nimport Task from \"./components/Task\";\nimport PrivateRoute from \"./common/PrivateRoute\";\n\nfunction App() {\n    return (\n        <AuthProvider>\n            <HashRouter>\n                <NaviBar/>\n                <Switch>\n                    <Route exact path=\"/home\" component={Home}/>\n                    <Route exact path=\"/\" component={Home}/>\n                    <PrivateRoute exact path=\"/admin\" component={Admin}/>\n                    <Route exact path=\"/login\" component={Login}/>\n                    <PrivateRoute exact path=\"/createTask\" component={TaskCreation}/>\n                    <Route exact path=\"/profile/:uid\" component={Profile}/>\n                    <Route exact path=\"/task/:taskId\" component={Task}/>\n                </Switch>\n            </HashRouter>\n        </AuthProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\n\nReactDOM.render(\n    <AlertProvider template={AlertTemplate}>\n    <HashRouter>\n        <App/>,\n    </HashRouter>\n    </AlertProvider>,\n    document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}